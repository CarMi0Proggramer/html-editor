---
import AddSectionModal from "../../components/AddSectionModal.astro";
import ToastSuccess from "../../components/ToastSuccess.astro";
import Layout from "../../layouts/Layout.astro";
import { getDocumentSectionsByDocumentId } from "../../utils/document-sections";
import { getDocumentById } from "../../utils/documents";

const documentId = Astro.params["id"]!;

const document = await getDocumentById(documentId);
const documentSections = await getDocumentSectionsByDocumentId(documentId);
---

<Layout title="HTML Editor">
  <main class="max-w-screen-lg mx-auto p-6">
    <section class="flex justify-between items-center flex-wrap gap-4">
      <form
        id="updateDocumentNameForm"
        class="flex items-center w-full sm:w-1/2"
      >
        <div class="relative w-full">
          <input
            type="text"
            id="document-name"
            class="block w-full px-4 py-2 text-sm text-gray-900 border border-gray-300 rounded-md bg-gray-50 focus:ring-primary-500 focus:border-primary-500"
            placeholder="Nombre del documento"
            required
            name="name"
            value={document.name}
          />
          <button
            type="submit"
            class="inline-flex items-center gap-1 bg-primary-600 rounded-md px-4 py-2 text-white absolute right-0 inset-y-0 font-semibold focus:ring-4 focus:ring-primary-200 hover:bg-primary-700 text-sm"
          >
            Renombrar
            <svg
              class="size-5"
              fill="currentColor"
              viewBox="0 0 20 20"
              xmlns="http://www.w3.org/2000/svg"
              ><path
                fill-rule="evenodd"
                d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                clip-rule="evenodd"></path></svg
            >
          </button>
        </div>
      </form>
      <div class="flex gap-2 items-center">
        <button
          id="exportButton"
          type="button"
          class="text-gray-950 bg-gray-100 hover:bg-gray-200 focus:ring-4 focus:ring-gray-100 font-medium rounded-md text-sm px-5 py-2.5 focus:outline-none border border-gray-300 inline-flex items-center gap-2"
          >Exportar
          <svg
            class="size-5"
            fill="currentColor"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g id="Interface / Download">
              <path
                id="Vector"
                d="M6 21H18M12 3V17M12 17L17 12M12 17L7 12"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
            </g>
          </svg>
        </button>
        <button
          data-modal-target="AddSectionModal"
          data-modal-toggle="AddSectionModal"
          type="button"
          class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-md text-sm px-5 py-2.5 focus:outline-none"
          >Agregar Secci√≥n</button
        >
      </div>
    </section>
    <section class="mt-12">
      <div class="wrapper">
        {
          documentSections.map((documentSection) => (
            <div class="accordion">
              <h3 class="accordion-title">
                {documentSection.heading}
                <div class="inline-flex items-center gap-3">
                  <button
                    data-document-section-id={documentSection.id}
                    class="deleteSectionBtn text-red-500 hover:text-red-700"
                  >
                    <svg
                      class="size-6"
                      viewBox="0 0 24 24"
                      fill="#fff"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M4 6H20M16 6L15.7294 5.18807C15.4671 4.40125 15.3359 4.00784 15.0927 3.71698C14.8779 3.46013 14.6021 3.26132 14.2905 3.13878C13.9376 3 13.523 3 12.6936 3H11.3064C10.477 3 10.0624 3 9.70951 3.13878C9.39792 3.26132 9.12208 3.46013 8.90729 3.71698C8.66405 4.00784 8.53292 4.40125 8.27064 5.18807L8 6M18 6V16.2C18 17.8802 18 18.7202 17.673 19.362C17.3854 19.9265 16.9265 20.3854 16.362 20.673C15.7202 21 14.8802 21 13.2 21H10.8C9.11984 21 8.27976 21 7.63803 20.673C7.07354 20.3854 6.6146 19.9265 6.32698 19.362C6 18.7202 6 17.8802 6 16.2V6M14 10V17M10 10V17"
                        stroke="currentColor"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                      />
                    </svg>
                  </button>
                  <svg
                    class="accordion-icon"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                      clip-rule="evenodd"
                    />
                  </svg>
                </div>
              </h3>
              <div
                class="accordion-description"
                set:html={documentSection.content}
              />
            </div>
          ))
        }
      </div>
    </section>
  </main>
  <ToastSuccess />
  <AddSectionModal />
</Layout>
<script>
  import { notifyError, notifySuccess } from "../../utils/notifications";

  const updateDocumentNameForm = document.getElementById(
    "updateDocumentNameForm"
  );
  const documentId = localStorage.getItem("documentId");

  if (updateDocumentNameForm instanceof HTMLFormElement) {
    updateDocumentNameForm.addEventListener("submit", async (e) => {
      e.preventDefault();

      await fetch(`/api/documents/${documentId}`, {
        method: "PATCH",
        body: new FormData(updateDocumentNameForm),
      });

      notifySuccess("Documento actualizado correctamente");
    });
  }

  const exportButton = document.getElementById("exportButton");

  if (exportButton instanceof HTMLButtonElement) {
    const formData = new FormData();
    formData.append("documentId", documentId!);

    exportButton.addEventListener("click", async () => {
      const res = await fetch("/api/export-html-file", {
        method: "POST",
        body: formData,
      });

      if (!res.ok) {
        notifyError("Error al exportar el archivo");
      }

      const blob = await res.blob();
      const downloadLink = document.createElement("a");

      downloadLink.href = URL.createObjectURL(blob);
      downloadLink.download = "documento1.html";
      downloadLink.hidden = true;

      document.body.appendChild(downloadLink);
      downloadLink.click();
      document.body.removeChild(downloadLink);
    });
  }

  const deleteSectionButtons = document.querySelectorAll(
    ".deleteSectionBtn"
  ) as NodeListOf<HTMLButtonElement>;

  for (const deleteSectionBtn of deleteSectionButtons) {
    deleteSectionBtn.addEventListener("click", (e) => {
      e.stopPropagation();

      const documentSectionId = deleteSectionBtn.dataset.documentSectionId;

      fetch(`/api/document-sections/${documentSectionId}`, {
        method: "DELETE",
      }).then(() => location.reload());
    });
  }
</script>
<style>
  @import url("../../assets/css/documents.css");
</style>
<script src="../../assets/js/documents.js"></script>
